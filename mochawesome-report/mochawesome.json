{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 1,
    "pending": 0,
    "failures": 0,
    "start": "2022-03-04T12:13:17.669Z",
    "end": "2022-03-04T12:13:32.134Z",
    "duration": 14465,
    "testsRegistered": 1,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "ae56afad-7297-481a-8708-c19d29f8662c",
      "title": "",
      "fullFile": "cypress/integration/testcases/quidax_03-listboxes.js",
      "file": "cypress/integration/testcases/quidax_03-listboxes.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "494fabd8-bd54-4aaa-9d40-d5c559945dbf",
          "title": "Automation test for list boxes",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "One that checks one of the list boxes",
              "fullTitle": "Automation test for list boxes One that checks one of the list boxes",
              "timedOut": null,
              "duration": 14443,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('/');\nlistBoxes.noThanksOnPopUpModal().click();\nlistBoxes.listBoxesTab().click();\nlistBoxes.selectBootsrap().click();\nlistBoxes.rightBoxData().then(item => {\n  expect(item[0]).to.contain.text('bootstrap-duallist ');\n  expect(item[1]).to.contain.text('Dapibus ac facilisis in');\n  expect(item[2]).to.contain.text('Morbi leo risus');\n  expect(item[3]).to.contain.text('Porta ac consectetur ac');\n  expect(item[4]).to.contain.text('Vestibulum at eros');\n});\nlistBoxes.leftDataList().should('have.length', 5);\nlistBoxes.rightDataList().should('have.length', 5); //Select and move an item  from the right to the left\nlistBoxes.selectItem().should('have.text', 'Cras justo odio').click();\nlistBoxes.moveToLeft().click();\nlistBoxes.leftDataList().should('have.length', 6);\nlistBoxes.rightDataList().should('have.length', 4); //Validating item is on the left side\nlistBoxes.verifySelectedItem().should('have.text', 'Cras justo odio');\nlistBoxes.selectItem().should('not.have.text', 'Cras justo odio').click();",
              "err": {},
              "uuid": "bccc2ad5-7f41-4396-a69a-659547e68672",
              "parentUUID": "494fabd8-bd54-4aaa-9d40-d5c559945dbf",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "bccc2ad5-7f41-4396-a69a-659547e68672"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 14443,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.3.1"
    },
    "marge": {
      "options": null,
      "version": "5.2.0"
    }
  }
}